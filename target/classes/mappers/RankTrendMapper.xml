<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.compact.yms.domain.ranktrend.RankTrendMapper">
	<select id="getRankTrendOfSeperator" parameterType="hashmap" 
										 resultType="com.compact.yms.domain.ranktrend.dto.ResultTableData" statementType="PREPARED">
		WITH DATA_M
		     AS (  SELECT S.FACTORYNAME,
		                  A.FMKEY,
		                  A.LOTID,
		                  A.TKINTIME,
		                  A.TKOUTTIME,
		                  A.STEPSEQ,
		                  <choose>
		                  	<when test='type == "BIN"'>B.RANKID</when>
		                  	<when test='type == "CIE"'>B.CIE</when>
		                  	<when test='type == "IV"'>B.FLUX</when>
		                  	<when test='type == "VF"'>B.VF</when>
		                  	<when test='type == "NG"'>B.NG</when>
		                  </choose>
		                  ,
		                  A.EQPID,
		                  A.DIV,
		                  A.PRODUCTSPECGROUP,
		                  A.PRODUCTSPECNAME,
		                  A.PROGRAM,
		                  A.LOTTYPE,
		                  ROUND(SUM (B.PER) OVER (PARTITION BY LOTID, RANKID) * 100, 2) AS PER,
		                  SUM (B.QTY) OVER (PARTITION BY LOTID) AS T_QTY,
		                  SUM (CASE WHEN B.ZPASS = 'Y' THEN B.QTY ELSE 0 END)
		                     OVER (PARTITION BY LOTID, RANKID ORDER BY RANKID ASC)
		                     AS G_QTY,
		                  SUM (CASE WHEN B.ZPASS = 'N' THEN B.QTY ELSE 0 END)
		                     OVER (PARTITION BY LOTID, RANKID ORDER BY RANKID ASC)
		                     AS B_QTY
		             FROM STD_CALENDAR S, YMS_FILEINDEX_10Y A, YMS_FSM_RANK B, POP_LOT L
		            WHERE     S.FACTORYNAME = #{factoryName}
		                  AND S.FACTORYDATE BETWEEN #{startDate} AND #{endDate}
		                  AND A.TKINTIME BETWEEN TO_DATE (S.STARTTIME,
		                                                  'YYYYMMDDHH24MISS')
		                                     AND TO_DATE (S.ENDTIME,
		                                                  'YYYYMMDDHH24MISS')
						  AND A.LOTID = L.LOTNAME
						  AND A.FMKEY = B.FMKEY
		                  AND A.DIV = #{div}
		                  AND A.STEPSEQ = #{stepSeq}
		                  <![CDATA[
		                  	AND B.QTY <> 0
		                  ]]>
		                  <choose>
		                  	<when test='type == "BIN"'>
		                  		<if test="filters != null">
									<foreach item="filter" index="i" collection="filters" open="AND B.RANKID IN (" separator="," close=")">#{filter}</foreach>
		  				  		</if>
		                  	</when>
		                  	<when test='type == "CIE"'>
		                  		<if test="filters != null">
									<foreach item="filter" index="i" collection="filters" open="AND B.CIE IN (" separator="," close=")">#{filter}</foreach>
		  				  		</if>
		                  	</when>
		                  	<when test='type == "IV"'>
		                  		<if test="filters != null">
									<foreach item="filter" index="i" collection="filters" open="AND B.FLUX IN (" separator="," close=")">#{filter}</foreach>
		  				  		</if>
		                  	</when>
		                  	<when test='type == "VF"'>
		                  		<if test="filters != null">
									<foreach item="filter" index="i" collection="filters" open="AND B.VF IN (" separator="," close=")">#{filter}</foreach>
		  				  		</if>
		                  	</when>
		                  	<when test='type == "NG"'>
		                  		<if test="filters != null">
									<foreach item="filter" index="i" collection="filters" open="AND B.BIN IN (" separator="," close=")">#{filter}</foreach>
		  				  		</if>
		                  	</when>
		                  </choose>
		                  <if test="productSpecGroups != null">
							<foreach item="productSpecGroup" index="i" collection="productSpecGroups" open="AND A.PRODUCTSPECGROUP IN (" separator="," close=")">#{productSpecGroup}</foreach>
		  				  </if>
		  				  <if test="productSpecNames != null">
							<foreach item="productSpecName" index="i" collection="productSpecNames" open="AND A.PRODUCTSPECNAME IN (" separator="," close=")">#{productSpecName}</foreach>
		  				  </if>
		  				  <if test="programs != null">
							<foreach item="program" index="i" collection="programs" open="AND A.PROGRAM IN (" separator="," close=")">#{program}</foreach>
		  				  </if>
		  				  <if test="targets != null">
							<foreach item="target" index="i" collection="targets" open="AND L.TARGET IN (" separator="," close=")">#{target}</foreach>
		  				  </if>
		  				  <if test="chipSpecs != null">
							<foreach item="chipSpec" index="i" collection="chipSpecs" open="AND L.CHIPSPEC IN (" separator="," close=")">#{chipSpec}</foreach>
		  				  </if>
		  				  <if test="intensities != null">
							<foreach item="intensity" index="i" collection="intensities" open="AND L.INTENSITY IN (" separator="," close=")">#{intensity}</foreach>
		  				  </if>
		  				  <if test="pls != null">
							<foreach item="pl" index="i" collection="pls" open="AND A.PRODUCTSPECGROUP IN (" separator="," close=")">#{pl}</foreach>
		  				  </if>
		  				  <if test="frameNames != null">
							<foreach item="frameName" index="i" collection="frameNames" open="AND L.FRAMENAME IN (" separator="," close=")">#{frameName}</foreach>
		  				  </if>
		  				  <if test="lotIds != null">
							<foreach item="lotId" index="i" collection="lotIds" open="AND A.LOTID IN (" separator="," close=")">#{lotId}</foreach>
		  				  </if>
		         GROUP BY S.FACTORYNAME,
		                  A.FMKEY,
		                  A.LOTID,
		                  A.TKINTIME,
		                  A.TKOUTTIME,
		                  A.STEPSEQ,
		                  <choose>
		                  	<when test='type == "BIN"'>B.RANKID</when>
		                  	<when test='type == "CIE"'>B.CIE</when>
		                  	<when test='type == "IV"'>B.FLUX</when>
		                  	<when test='type == "VF"'>B.VF</when>
		                  	<when test='type == "NG"'>B.NG</when>
		                  </choose>
		                  ,
		                  B.PER,
		                  B.QTY,
		                  B.ZPASS,
		                  A.EQPID,
		                  A.DIV,
		                  A.PRODUCTSPECGROUP,
		                  A.PRODUCTSPECNAME,
		                  A.PROGRAM,
		                  A.LOTTYPE),
		     CIEX
		     AS (SELECT MAX (D.FMKEY)
		                KEEP (DENSE_RANK FIRST ORDER BY ADDITIONALVALUE NULLS LAST)
		                   AS FMKEY,
		                MAX (D.ITEMID)
		                KEEP (DENSE_RANK FIRST ORDER BY ADDITIONALVALUE NULLS LAST)
		                   AS ITEMID,
		                MAX (D.DSTD)
		                KEEP (DENSE_RANK FIRST ORDER BY ADDITIONALVALUE NULLS LAST)
		                   DSTD,
		                MAX (D.DAVG)
		                KEEP (DENSE_RANK FIRST ORDER BY ADDITIONALVALUE NULLS LAST)
		                   DAVG
		           FROM DATA_M A, YMS_FSM_ITEM_D D, POP_ENUMDEFVALUE E
		          WHERE     A.FMKEY = D.FMKEY
		                AND E.ENUMNAME = 'CIE-XY-NAME'
		                AND E.DEFAULTFLAG = 'X'
		                AND D.ITEMID = E.ENUMVALUE),
		     CIEY
		     AS (SELECT MAX (D.FMKEY)
		                KEEP (DENSE_RANK FIRST ORDER BY ADDITIONALVALUE NULLS LAST)
		                   AS FMKEY,
		                MAX (D.ITEMID)
		                KEEP (DENSE_RANK FIRST ORDER BY ADDITIONALVALUE NULLS LAST)
		                   AS ITEMID,
		                MAX (D.DSTD)
		                KEEP (DENSE_RANK FIRST ORDER BY ADDITIONALVALUE NULLS LAST)
		                   DSTD,
		                MAX (D.DAVG)
		                KEEP (DENSE_RANK FIRST ORDER BY ADDITIONALVALUE NULLS LAST)
		                   DAVG
		           FROM DATA_M A, YMS_FSM_ITEM_D D, POP_ENUMDEFVALUE E
		          WHERE     A.FMKEY = D.FMKEY
		                AND E.ENUMNAME = 'CIE-XY-NAME'
		                AND E.DEFAULTFLAG = 'Y'
		                AND D.ITEMID = E.ENUMVALUE),
		     IV
		     AS (SELECT MAX (D.FMKEY)
		                KEEP (DENSE_RANK FIRST ORDER BY ADDITIONALVALUE NULLS LAST)
		                   AS FMKEY,
		                MAX (D.ITEMID)
		                KEEP (DENSE_RANK FIRST ORDER BY ADDITIONALVALUE NULLS LAST)
		                   AS ITEMID,
		                MAX (D.DSTD)
		                KEEP (DENSE_RANK FIRST ORDER BY ADDITIONALVALUE NULLS LAST)
		                   DSTD,
		                MAX (D.DAVG)
		                KEEP (DENSE_RANK FIRST ORDER BY ADDITIONALVALUE NULLS LAST)
		                   DAVG
		           FROM DATA_M A, YMS_FSM_ITEM_D D, POP_ENUMDEFVALUE E
		          WHERE     A.FMKEY = D.FMKEY
		                AND E.ENUMNAME = 'Q_STestYield_ITEMID-IV'
		                AND E.DEFAULTFLAG = 'Y'
		                AND D.ITEMID = E.ENUMVALUE),
		     VF
		     AS (SELECT MAX (D.FMKEY)
		                KEEP (DENSE_RANK FIRST ORDER BY ADDITIONALVALUE NULLS LAST)
		                   AS FMKEY,
		                MAX (D.ITEMID)
		                KEEP (DENSE_RANK FIRST ORDER BY ADDITIONALVALUE NULLS LAST)
		                   AS ITEMID,
		                MAX (D.DSTD)
		                KEEP (DENSE_RANK FIRST ORDER BY ADDITIONALVALUE NULLS LAST)
		                   DSTD,
		                MAX (D.DAVG)
		                KEEP (DENSE_RANK FIRST ORDER BY ADDITIONALVALUE NULLS LAST)
		                   DAVG
		           FROM DATA_M A, YMS_FSM_ITEM_D D, POP_ENUMDEFVALUE E
		          WHERE     A.FMKEY = D.FMKEY
		                AND E.ENUMNAME = 'Q_STestYield_ITEMID-VF'
		                AND E.DEFAULTFLAG = 'Y'
		                AND D.ITEMID = E.ENUMVALUE),
		     LMP
		     AS (SELECT D.FMKEY,
		                D.ITEMID,
		                D.DSTD,
		                D.DAVG
		           FROM DATA_M A, YMS_FSM_ITEM_D D
		          WHERE A.FMKEY = D.FMKEY AND D.ITEMID = 'LMP'),
		     LMD
		     AS (SELECT D.FMKEY,
		                D.ITEMID,
		                D.DSTD,
		                D.DAVG
		           FROM DATA_M A, YMS_FSM_ITEM_D D
		          WHERE A.FMKEY = D.FMKEY AND D.ITEMID = 'LMD'),
		     CRI
		     AS (SELECT MAX (D.FMKEY)
		                KEEP (DENSE_RANK LAST ORDER BY LENGTH (D.ITEMID) NULLS LAST)
		                   AS FMKEY,
		                MAX (D.ITEMID)
		                KEEP (DENSE_RANK LAST ORDER BY LENGTH (D.ITEMID) NULLS LAST)
		                   AS ITEMID,
		                MAX (D.DSTD)
		                KEEP (DENSE_RANK LAST ORDER BY LENGTH (D.ITEMID) NULLS LAST)
		                   DSTD,
		                MAX (D.DAVG)
		                KEEP (DENSE_RANK LAST ORDER BY LENGTH (D.ITEMID) NULLS LAST)
		                   DAVG
		           FROM DATA_M A, YMS_FSM_ITEM_D D, POP_ENUMDEFVALUE E
		          WHERE A.FMKEY = D.FMKEY AND D.ITEMID IN ('CRI', 'CRI(R)')),
		     R9
		     AS (SELECT MAX (D.FMKEY)
		                KEEP (DENSE_RANK LAST ORDER BY LENGTH (D.ITEMID) NULLS LAST)
		                   AS FMKEY,
		                MAX (D.ITEMID)
		                KEEP (DENSE_RANK LAST ORDER BY LENGTH (D.ITEMID) NULLS LAST)
		                   AS ITEMID,
		                MAX (D.DSTD)
		                KEEP (DENSE_RANK LAST ORDER BY LENGTH (D.ITEMID) NULLS LAST)
		                   DSTD,
		                MAX (D.DAVG)
		                KEEP (DENSE_RANK LAST ORDER BY LENGTH (D.ITEMID) NULLS LAST)
		                   DAVG
		           FROM DATA_M A, YMS_FSM_ITEM_D D, POP_ENUMDEFVALUE E
		          WHERE A.FMKEY = D.FMKEY AND D.ITEMID IN ('R9')),
		     TEST_PULL
		     AS (SELECT MAX(TEST_CODE) AS TEST_CODE,
		                MAX(EQUIP) AS EQUIP,
		                MAX(OKNG_DIV) AS OKNG_DIV,
		                MAX(AVG_VALUE)
		                KEEP(DENSE_RANK LAST ORDER BY TEST_CODE_SEQ NULLS LAST) AS AVG_VALUE,
		                MAX(MIN_VALUE)
		                KEEP(DENSE_RANK LAST ORDER BY TEST_CODE_SEQ NULLS LAST) AS MIN_VALUE,
		                MAX(MAX_VALUE)
		                KEEP(DENSE_RANK LAST ORDER BY TEST_CODE_SEQ NULLS LAST) AS MAX_VALUE,
		                MAX(MAX_VALUE - MIN_VALUE)
		                KEEP(DENSE_RANK LAST ORDER BY TEST_CODE_SEQ NULLS LAST) AS MAX_MIN_VALUE
		           FROM DATA_M A, POP_TB_TEST_PULL_HISTORY B
		          WHERE     A.LOTID = B.TEST_CODE
		            AND B.ITEM1 = '제품 높이'
		            AND B.ITEM2 = 'Height'
			)
		SELECT A.FACTORYNAME,
		       A.LOTID,
		       A.STEPSEQ,
		       TO_CHAR(A.TKINTIME, 'YYYY-MM-DD HH24:MI:SS') AS TKINTIME,
		       TO_CHAR(A.TKOUTTIME, 'YYYY-MM-DD HH24:MI:SS') AS TKOUTTIME,
		       A.EQPID || '(' || M.DESCRIPTION || ')' AS EQPID,
		       A.DIV,
		       A.PRODUCTSPECGROUP,
		       A.PRODUCTSPECNAME,
		       A.PROGRAM,
		       A.LOTTYPE,
		       L.TARGET,
		       L.CHIPSPEC,
		       L.CHIPNAME,
		       L.INTENSITY,
		       L.PL,
		       L.MOLDMACHINENAME,
		       L.MOLDEVENTUSER,
		       L.FRAMENAME,
		       MI.TOTALPROPORTION,
		       MI.RATIO1,
		       MI.PHOSPOR1NAME,
		       MI.RATIO2,
		       MI.PHOSPOR2NAME,
		       MI.RATIO3,
		       MI.PHOSPOR3NAME,
		       A.T_QTY TQTY,
		       A.G_QTY GQTY,
		       A.B_QTY BQTY,
		       A.RANKID AS ITEMID,
		       NULL AS SLOTNO,
		       ROUND (G_QTY / T_QTY * 100, 2) AS YIELD,
		       L.AFCMACHINENAME,
		       L.AFCEVENTUSER,
		       L.NMMACHINENAME,
		       L.NMEVENTUSER,
		       L.BGMACHINENAME,
		       L.BGEVENTUSER,
		       T.EQUIP BEQUIP,
		       T.OKNG_DIV AS OKNGDIV,
		       T.AVG_VALUE AS AVGVALUE,
		       T.MIN_VALUE AS MINVALUE,
		       T.MAX_VALUE AS MAXVALUE,
		       T.MAX_MIN_VALUE AS MAXMINVALUE,
		       CIEX.DSTD AS XSTD,
		       CIEX.DAVG AS XAVG,
		       CIEY.DSTD AS YSTD,
		       CIEY.DAVG AS YAVG,
		       IV.DSTD AS IVSTD,
		       IV.DAVG AS IVAVG,
		       VF.DSTD AS VFSTD,
		       VF.DAVG AS VFAVG,
		       LMP.DSTD AS LMPSTD,
		       LMP.DAVG AS LMPAVG,
		       LMD.DSTD AS LMDSTD,
		       LMD.DAVG AS LMDAVG,
		       CRI.DSTD AS CRISTD,
		       CRI.DAVG AS CRIAVG,
		       R9.DSTD AS R9STD,
		       R9.DAVG AS R9AVG,
		       <choose>
		       	<when test='opt1 == "PER"'>A.PER</when>
		       	<when test='opt1 == "COUNT"'>A.T_QTY</when>
		       </choose>
		       AS dataValue
		  FROM DATA_M A,
		       POP_LOT L,
		       POP_MACHINESPEC M,
		       POP_TB_MOLDING_INFO MI,
		       TEST_PULL T,
		       CIEX,
		       CIEY,
		       IV,
		       VF,
		       LMP,
		       LMD,
		       CRI,
		       R9
		 WHERE     A.FMKEY = CIEX.FMKEY(+)
		       AND A.FMKEY = CIEY.FMKEY(+)
		       AND A.FMKEY = IV.FMKEY(+)
		       AND A.FMKEY = VF.FMKEY(+)
		       AND A.FMKEY = LMP.FMKEY(+)
		       AND A.FMKEY = LMD.FMKEY(+)
		       AND A.FMKEY = CRI.FMKEY(+)
		       AND A.FMKEY = R9.FMKEY(+)
		       AND A.EQPID = M.MACHINENAME(+)
		       AND A.LOTID = L.LOTNAME(+)
		       AND A.LOTID = MI.LOTNAME(+)
		       AND A.LOTID = T.TEST_CODE(+)
	</select>
</mapper>